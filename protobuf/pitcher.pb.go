// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.15.3
// source: protobuf/pitcher.proto

package protobuf

import (
	proto "github.com/golang/protobuf/proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type MatchingRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ArtistName  string `protobuf:"bytes,1,opt,name=artist_name,json=artistName,proto3" json:"artist_name,omitempty"`
	TrackName   string `protobuf:"bytes,2,opt,name=track_name,json=trackName,proto3" json:"track_name,omitempty"`
	ReleaseName string `protobuf:"bytes,3,opt,name=release_name,json=releaseName,proto3" json:"release_name,omitempty"`
}

func (x *MatchingRequest) Reset() {
	*x = MatchingRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protobuf_pitcher_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MatchingRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MatchingRequest) ProtoMessage() {}

func (x *MatchingRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protobuf_pitcher_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MatchingRequest.ProtoReflect.Descriptor instead.
func (*MatchingRequest) Descriptor() ([]byte, []int) {
	return file_protobuf_pitcher_proto_rawDescGZIP(), []int{0}
}

func (x *MatchingRequest) GetArtistName() string {
	if x != nil {
		return x.ArtistName
	}
	return ""
}

func (x *MatchingRequest) GetTrackName() string {
	if x != nil {
		return x.TrackName
	}
	return ""
}

func (x *MatchingRequest) GetReleaseName() string {
	if x != nil {
		return x.ReleaseName
	}
	return ""
}

type MatchingResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Track *Track `protobuf:"bytes,1,opt,name=track,proto3" json:"track,omitempty"`
}

func (x *MatchingResponse) Reset() {
	*x = MatchingResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protobuf_pitcher_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MatchingResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MatchingResponse) ProtoMessage() {}

func (x *MatchingResponse) ProtoReflect() protoreflect.Message {
	mi := &file_protobuf_pitcher_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MatchingResponse.ProtoReflect.Descriptor instead.
func (*MatchingResponse) Descriptor() ([]byte, []int) {
	return file_protobuf_pitcher_proto_rawDescGZIP(), []int{1}
}

func (x *MatchingResponse) GetTrack() *Track {
	if x != nil {
		return x.Track
	}
	return nil
}

type TrackRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Gid string `protobuf:"bytes,1,opt,name=gid,proto3" json:"gid,omitempty"`
}

func (x *TrackRequest) Reset() {
	*x = TrackRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protobuf_pitcher_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TrackRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TrackRequest) ProtoMessage() {}

func (x *TrackRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protobuf_pitcher_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TrackRequest.ProtoReflect.Descriptor instead.
func (*TrackRequest) Descriptor() ([]byte, []int) {
	return file_protobuf_pitcher_proto_rawDescGZIP(), []int{2}
}

func (x *TrackRequest) GetGid() string {
	if x != nil {
		return x.Gid
	}
	return ""
}

type TrackResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Track *Track `protobuf:"bytes,1,opt,name=track,proto3" json:"track,omitempty"`
}

func (x *TrackResponse) Reset() {
	*x = TrackResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protobuf_pitcher_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TrackResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TrackResponse) ProtoMessage() {}

func (x *TrackResponse) ProtoReflect() protoreflect.Message {
	mi := &file_protobuf_pitcher_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TrackResponse.ProtoReflect.Descriptor instead.
func (*TrackResponse) Descriptor() ([]byte, []int) {
	return file_protobuf_pitcher_proto_rawDescGZIP(), []int{3}
}

func (x *TrackResponse) GetTrack() *Track {
	if x != nil {
		return x.Track
	}
	return nil
}

type TracksRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Gids []string `protobuf:"bytes,1,rep,name=gids,proto3" json:"gids,omitempty"`
}

func (x *TracksRequest) Reset() {
	*x = TracksRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protobuf_pitcher_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TracksRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TracksRequest) ProtoMessage() {}

func (x *TracksRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protobuf_pitcher_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TracksRequest.ProtoReflect.Descriptor instead.
func (*TracksRequest) Descriptor() ([]byte, []int) {
	return file_protobuf_pitcher_proto_rawDescGZIP(), []int{4}
}

func (x *TracksRequest) GetGids() []string {
	if x != nil {
		return x.Gids
	}
	return nil
}

type TracksResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Tracks map[string]*Track `protobuf:"bytes,1,rep,name=tracks,proto3" json:"tracks,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *TracksResponse) Reset() {
	*x = TracksResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protobuf_pitcher_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TracksResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TracksResponse) ProtoMessage() {}

func (x *TracksResponse) ProtoReflect() protoreflect.Message {
	mi := &file_protobuf_pitcher_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TracksResponse.ProtoReflect.Descriptor instead.
func (*TracksResponse) Descriptor() ([]byte, []int) {
	return file_protobuf_pitcher_proto_rawDescGZIP(), []int{5}
}

func (x *TracksResponse) GetTracks() map[string]*Track {
	if x != nil {
		return x.Tracks
	}
	return nil
}

type CoverArtRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AlbumGid string `protobuf:"bytes,1,opt,name=album_gid,json=albumGid,proto3" json:"album_gid,omitempty"`
}

func (x *CoverArtRequest) Reset() {
	*x = CoverArtRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protobuf_pitcher_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CoverArtRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CoverArtRequest) ProtoMessage() {}

func (x *CoverArtRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protobuf_pitcher_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CoverArtRequest.ProtoReflect.Descriptor instead.
func (*CoverArtRequest) Descriptor() ([]byte, []int) {
	return file_protobuf_pitcher_proto_rawDescGZIP(), []int{6}
}

func (x *CoverArtRequest) GetAlbumGid() string {
	if x != nil {
		return x.AlbumGid
	}
	return ""
}

type CoverArtResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Url       string `protobuf:"bytes,1,opt,name=url,proto3" json:"url,omitempty"`
	SmallUrl  string `protobuf:"bytes,2,opt,name=small_url,json=smallUrl,proto3" json:"small_url,omitempty"`
	MediumUrl string `protobuf:"bytes,3,opt,name=medium_url,json=mediumUrl,proto3" json:"medium_url,omitempty"`
	LargeUrl  string `protobuf:"bytes,4,opt,name=large_url,json=largeUrl,proto3" json:"large_url,omitempty"`
}

func (x *CoverArtResponse) Reset() {
	*x = CoverArtResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protobuf_pitcher_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CoverArtResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CoverArtResponse) ProtoMessage() {}

func (x *CoverArtResponse) ProtoReflect() protoreflect.Message {
	mi := &file_protobuf_pitcher_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CoverArtResponse.ProtoReflect.Descriptor instead.
func (*CoverArtResponse) Descriptor() ([]byte, []int) {
	return file_protobuf_pitcher_proto_rawDescGZIP(), []int{7}
}

func (x *CoverArtResponse) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *CoverArtResponse) GetSmallUrl() string {
	if x != nil {
		return x.SmallUrl
	}
	return ""
}

func (x *CoverArtResponse) GetMediumUrl() string {
	if x != nil {
		return x.MediumUrl
	}
	return ""
}

func (x *CoverArtResponse) GetLargeUrl() string {
	if x != nil {
		return x.LargeUrl
	}
	return ""
}

type ArtistRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Gid string `protobuf:"bytes,1,opt,name=gid,proto3" json:"gid,omitempty"`
}

func (x *ArtistRequest) Reset() {
	*x = ArtistRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protobuf_pitcher_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ArtistRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ArtistRequest) ProtoMessage() {}

func (x *ArtistRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protobuf_pitcher_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ArtistRequest.ProtoReflect.Descriptor instead.
func (*ArtistRequest) Descriptor() ([]byte, []int) {
	return file_protobuf_pitcher_proto_rawDescGZIP(), []int{8}
}

func (x *ArtistRequest) GetGid() string {
	if x != nil {
		return x.Gid
	}
	return ""
}

type ArtistResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Artist *Artist `protobuf:"bytes,1,opt,name=artist,proto3" json:"artist,omitempty"`
}

func (x *ArtistResponse) Reset() {
	*x = ArtistResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protobuf_pitcher_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ArtistResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ArtistResponse) ProtoMessage() {}

func (x *ArtistResponse) ProtoReflect() protoreflect.Message {
	mi := &file_protobuf_pitcher_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ArtistResponse.ProtoReflect.Descriptor instead.
func (*ArtistResponse) Descriptor() ([]byte, []int) {
	return file_protobuf_pitcher_proto_rawDescGZIP(), []int{9}
}

func (x *ArtistResponse) GetArtist() *Artist {
	if x != nil {
		return x.Artist
	}
	return nil
}

type ArtistsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Gids []string `protobuf:"bytes,1,rep,name=gids,proto3" json:"gids,omitempty"`
}

func (x *ArtistsRequest) Reset() {
	*x = ArtistsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protobuf_pitcher_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ArtistsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ArtistsRequest) ProtoMessage() {}

func (x *ArtistsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protobuf_pitcher_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ArtistsRequest.ProtoReflect.Descriptor instead.
func (*ArtistsRequest) Descriptor() ([]byte, []int) {
	return file_protobuf_pitcher_proto_rawDescGZIP(), []int{10}
}

func (x *ArtistsRequest) GetGids() []string {
	if x != nil {
		return x.Gids
	}
	return nil
}

type ArtistsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Artists map[string]*Artist `protobuf:"bytes,1,rep,name=artists,proto3" json:"artists,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *ArtistsResponse) Reset() {
	*x = ArtistsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protobuf_pitcher_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ArtistsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ArtistsResponse) ProtoMessage() {}

func (x *ArtistsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_protobuf_pitcher_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ArtistsResponse.ProtoReflect.Descriptor instead.
func (*ArtistsResponse) Descriptor() ([]byte, []int) {
	return file_protobuf_pitcher_proto_rawDescGZIP(), []int{11}
}

func (x *ArtistsResponse) GetArtists() map[string]*Artist {
	if x != nil {
		return x.Artists
	}
	return nil
}

type ReleaseGroupURLsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Gid string `protobuf:"bytes,1,opt,name=gid,proto3" json:"gid,omitempty"`
}

func (x *ReleaseGroupURLsRequest) Reset() {
	*x = ReleaseGroupURLsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protobuf_pitcher_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReleaseGroupURLsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReleaseGroupURLsRequest) ProtoMessage() {}

func (x *ReleaseGroupURLsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protobuf_pitcher_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReleaseGroupURLsRequest.ProtoReflect.Descriptor instead.
func (*ReleaseGroupURLsRequest) Descriptor() ([]byte, []int) {
	return file_protobuf_pitcher_proto_rawDescGZIP(), []int{12}
}

func (x *ReleaseGroupURLsRequest) GetGid() string {
	if x != nil {
		return x.Gid
	}
	return ""
}

type ReleaseGroupURLsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Urls []*URL `protobuf:"bytes,1,rep,name=urls,proto3" json:"urls,omitempty"`
}

func (x *ReleaseGroupURLsResponse) Reset() {
	*x = ReleaseGroupURLsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protobuf_pitcher_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReleaseGroupURLsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReleaseGroupURLsResponse) ProtoMessage() {}

func (x *ReleaseGroupURLsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_protobuf_pitcher_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReleaseGroupURLsResponse.ProtoReflect.Descriptor instead.
func (*ReleaseGroupURLsResponse) Descriptor() ([]byte, []int) {
	return file_protobuf_pitcher_proto_rawDescGZIP(), []int{13}
}

func (x *ReleaseGroupURLsResponse) GetUrls() []*URL {
	if x != nil {
		return x.Urls
	}
	return nil
}

type ArtistURLsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Gid string `protobuf:"bytes,1,opt,name=gid,proto3" json:"gid,omitempty"`
}

func (x *ArtistURLsRequest) Reset() {
	*x = ArtistURLsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protobuf_pitcher_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ArtistURLsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ArtistURLsRequest) ProtoMessage() {}

func (x *ArtistURLsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protobuf_pitcher_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ArtistURLsRequest.ProtoReflect.Descriptor instead.
func (*ArtistURLsRequest) Descriptor() ([]byte, []int) {
	return file_protobuf_pitcher_proto_rawDescGZIP(), []int{14}
}

func (x *ArtistURLsRequest) GetGid() string {
	if x != nil {
		return x.Gid
	}
	return ""
}

type ArtistURLsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Urls []*URL `protobuf:"bytes,1,rep,name=urls,proto3" json:"urls,omitempty"`
}

func (x *ArtistURLsResponse) Reset() {
	*x = ArtistURLsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protobuf_pitcher_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ArtistURLsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ArtistURLsResponse) ProtoMessage() {}

func (x *ArtistURLsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_protobuf_pitcher_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ArtistURLsResponse.ProtoReflect.Descriptor instead.
func (*ArtistURLsResponse) Descriptor() ([]byte, []int) {
	return file_protobuf_pitcher_proto_rawDescGZIP(), []int{15}
}

func (x *ArtistURLsResponse) GetUrls() []*URL {
	if x != nil {
		return x.Urls
	}
	return nil
}

type Artist struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id   int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Gid  string `protobuf:"bytes,2,opt,name=gid,proto3" json:"gid,omitempty"`
	Name string `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *Artist) Reset() {
	*x = Artist{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protobuf_pitcher_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Artist) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Artist) ProtoMessage() {}

func (x *Artist) ProtoReflect() protoreflect.Message {
	mi := &file_protobuf_pitcher_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Artist.ProtoReflect.Descriptor instead.
func (*Artist) Descriptor() ([]byte, []int) {
	return file_protobuf_pitcher_proto_rawDescGZIP(), []int{16}
}

func (x *Artist) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Artist) GetGid() string {
	if x != nil {
		return x.Gid
	}
	return ""
}

func (x *Artist) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type ReleaseDate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Year  int64 `protobuf:"varint,1,opt,name=year,proto3" json:"year,omitempty"`
	Month int64 `protobuf:"varint,2,opt,name=month,proto3" json:"month,omitempty"`
	Day   int64 `protobuf:"varint,3,opt,name=day,proto3" json:"day,omitempty"`
}

func (x *ReleaseDate) Reset() {
	*x = ReleaseDate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protobuf_pitcher_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReleaseDate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReleaseDate) ProtoMessage() {}

func (x *ReleaseDate) ProtoReflect() protoreflect.Message {
	mi := &file_protobuf_pitcher_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReleaseDate.ProtoReflect.Descriptor instead.
func (*ReleaseDate) Descriptor() ([]byte, []int) {
	return file_protobuf_pitcher_proto_rawDescGZIP(), []int{17}
}

func (x *ReleaseDate) GetYear() int64 {
	if x != nil {
		return x.Year
	}
	return 0
}

func (x *ReleaseDate) GetMonth() int64 {
	if x != nil {
		return x.Month
	}
	return 0
}

func (x *ReleaseDate) GetDay() int64 {
	if x != nil {
		return x.Day
	}
	return 0
}

type Album struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          int64        `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Gid         string       `protobuf:"bytes,2,opt,name=gid,proto3" json:"gid,omitempty"`
	Name        string       `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	ReleaseDate *ReleaseDate `protobuf:"bytes,4,opt,name=release_date,json=releaseDate,proto3" json:"release_date,omitempty"`
}

func (x *Album) Reset() {
	*x = Album{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protobuf_pitcher_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Album) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Album) ProtoMessage() {}

func (x *Album) ProtoReflect() protoreflect.Message {
	mi := &file_protobuf_pitcher_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Album.ProtoReflect.Descriptor instead.
func (*Album) Descriptor() ([]byte, []int) {
	return file_protobuf_pitcher_proto_rawDescGZIP(), []int{18}
}

func (x *Album) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Album) GetGid() string {
	if x != nil {
		return x.Gid
	}
	return ""
}

func (x *Album) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Album) GetReleaseDate() *ReleaseDate {
	if x != nil {
		return x.ReleaseDate
	}
	return nil
}

type Track struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id             int64   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Gid            string  `protobuf:"bytes,2,opt,name=gid,proto3" json:"gid,omitempty"`
	RecordingId    string  `protobuf:"bytes,3,opt,name=recording_id,json=recordingId,proto3" json:"recording_id,omitempty"`
	Name           string  `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty"`
	Length         uint32  `protobuf:"varint,5,opt,name=length,proto3" json:"length,omitempty"`
	Artist         *Artist `protobuf:"bytes,6,opt,name=artist,proto3" json:"artist,omitempty"`
	Album          *Album  `protobuf:"bytes,7,opt,name=album,proto3" json:"album,omitempty"`
	Position       int32   `protobuf:"varint,8,opt,name=position,proto3" json:"position,omitempty"`
	MediumPosition int32   `protobuf:"varint,9,opt,name=medium_position,json=mediumPosition,proto3" json:"medium_position,omitempty"`
}

func (x *Track) Reset() {
	*x = Track{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protobuf_pitcher_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Track) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Track) ProtoMessage() {}

func (x *Track) ProtoReflect() protoreflect.Message {
	mi := &file_protobuf_pitcher_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Track.ProtoReflect.Descriptor instead.
func (*Track) Descriptor() ([]byte, []int) {
	return file_protobuf_pitcher_proto_rawDescGZIP(), []int{19}
}

func (x *Track) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Track) GetGid() string {
	if x != nil {
		return x.Gid
	}
	return ""
}

func (x *Track) GetRecordingId() string {
	if x != nil {
		return x.RecordingId
	}
	return ""
}

func (x *Track) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Track) GetLength() uint32 {
	if x != nil {
		return x.Length
	}
	return 0
}

func (x *Track) GetArtist() *Artist {
	if x != nil {
		return x.Artist
	}
	return nil
}

func (x *Track) GetAlbum() *Album {
	if x != nil {
		return x.Album
	}
	return nil
}

func (x *Track) GetPosition() int32 {
	if x != nil {
		return x.Position
	}
	return 0
}

func (x *Track) GetMediumPosition() int32 {
	if x != nil {
		return x.MediumPosition
	}
	return 0
}

type URL struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id  int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Gid string `protobuf:"bytes,2,opt,name=gid,proto3" json:"gid,omitempty"`
	Url string `protobuf:"bytes,3,opt,name=url,proto3" json:"url,omitempty"`
}

func (x *URL) Reset() {
	*x = URL{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protobuf_pitcher_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *URL) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*URL) ProtoMessage() {}

func (x *URL) ProtoReflect() protoreflect.Message {
	mi := &file_protobuf_pitcher_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use URL.ProtoReflect.Descriptor instead.
func (*URL) Descriptor() ([]byte, []int) {
	return file_protobuf_pitcher_proto_rawDescGZIP(), []int{20}
}

func (x *URL) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *URL) GetGid() string {
	if x != nil {
		return x.Gid
	}
	return ""
}

func (x *URL) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

var File_protobuf_pitcher_proto protoreflect.FileDescriptor

var file_protobuf_pitcher_proto_rawDesc = []byte{
	0x0a, 0x16, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x70, 0x69, 0x74, 0x63, 0x68,
	0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x74, 0x0a, 0x0f, 0x4d, 0x61, 0x74, 0x63,
	0x68, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x61,
	0x72, 0x74, 0x69, 0x73, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x61, 0x72, 0x74, 0x69, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x0a,
	0x74, 0x72, 0x61, 0x63, 0x6b, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x74, 0x72, 0x61, 0x63, 0x6b, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x72,
	0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x72, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x30,
	0x0a, 0x10, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x1c, 0x0a, 0x05, 0x74, 0x72, 0x61, 0x63, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x06, 0x2e, 0x54, 0x72, 0x61, 0x63, 0x6b, 0x52, 0x05, 0x74, 0x72, 0x61, 0x63, 0x6b,
	0x22, 0x20, 0x0a, 0x0c, 0x54, 0x72, 0x61, 0x63, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x10, 0x0a, 0x03, 0x67, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x67,
	0x69, 0x64, 0x22, 0x2d, 0x0a, 0x0d, 0x54, 0x72, 0x61, 0x63, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x1c, 0x0a, 0x05, 0x74, 0x72, 0x61, 0x63, 0x6b, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x06, 0x2e, 0x54, 0x72, 0x61, 0x63, 0x6b, 0x52, 0x05, 0x74, 0x72, 0x61, 0x63,
	0x6b, 0x22, 0x23, 0x0a, 0x0d, 0x54, 0x72, 0x61, 0x63, 0x6b, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x67, 0x69, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x04, 0x67, 0x69, 0x64, 0x73, 0x22, 0x88, 0x01, 0x0a, 0x0e, 0x54, 0x72, 0x61, 0x63, 0x6b,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x33, 0x0a, 0x06, 0x74, 0x72, 0x61,
	0x63, 0x6b, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x54, 0x72, 0x61, 0x63,
	0x6b, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x54, 0x72, 0x61, 0x63, 0x6b,
	0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x06, 0x74, 0x72, 0x61, 0x63, 0x6b, 0x73, 0x1a, 0x41,
	0x0a, 0x0b, 0x54, 0x72, 0x61, 0x63, 0x6b, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a,
	0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12,
	0x1c, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x06,
	0x2e, 0x54, 0x72, 0x61, 0x63, 0x6b, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38,
	0x01, 0x22, 0x2e, 0x0a, 0x0f, 0x43, 0x6f, 0x76, 0x65, 0x72, 0x41, 0x72, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x61, 0x6c, 0x62, 0x75, 0x6d, 0x5f, 0x67, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x61, 0x6c, 0x62, 0x75, 0x6d, 0x47, 0x69,
	0x64, 0x22, 0x7d, 0x0a, 0x10, 0x43, 0x6f, 0x76, 0x65, 0x72, 0x41, 0x72, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x6d, 0x61, 0x6c, 0x6c,
	0x5f, 0x75, 0x72, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x6d, 0x61, 0x6c,
	0x6c, 0x55, 0x72, 0x6c, 0x12, 0x1d, 0x0a, 0x0a, 0x6d, 0x65, 0x64, 0x69, 0x75, 0x6d, 0x5f, 0x75,
	0x72, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6d, 0x65, 0x64, 0x69, 0x75, 0x6d,
	0x55, 0x72, 0x6c, 0x12, 0x1b, 0x0a, 0x09, 0x6c, 0x61, 0x72, 0x67, 0x65, 0x5f, 0x75, 0x72, 0x6c,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x61, 0x72, 0x67, 0x65, 0x55, 0x72, 0x6c,
	0x22, 0x21, 0x0a, 0x0d, 0x41, 0x72, 0x74, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x10, 0x0a, 0x03, 0x67, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x67, 0x69, 0x64, 0x22, 0x31, 0x0a, 0x0e, 0x41, 0x72, 0x74, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1f, 0x0a, 0x06, 0x61, 0x72, 0x74, 0x69, 0x73, 0x74, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x07, 0x2e, 0x41, 0x72, 0x74, 0x69, 0x73, 0x74, 0x52, 0x06,
	0x61, 0x72, 0x74, 0x69, 0x73, 0x74, 0x22, 0x24, 0x0a, 0x0e, 0x41, 0x72, 0x74, 0x69, 0x73, 0x74,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x67, 0x69, 0x64, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x04, 0x67, 0x69, 0x64, 0x73, 0x22, 0x8f, 0x01, 0x0a,
	0x0f, 0x41, 0x72, 0x74, 0x69, 0x73, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x37, 0x0a, 0x07, 0x61, 0x72, 0x74, 0x69, 0x73, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x1d, 0x2e, 0x41, 0x72, 0x74, 0x69, 0x73, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x2e, 0x41, 0x72, 0x74, 0x69, 0x73, 0x74, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x52, 0x07, 0x61, 0x72, 0x74, 0x69, 0x73, 0x74, 0x73, 0x1a, 0x43, 0x0a, 0x0c, 0x41, 0x72, 0x74,
	0x69, 0x73, 0x74, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x1d, 0x0a, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x07, 0x2e, 0x41, 0x72, 0x74,
	0x69, 0x73, 0x74, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x2b,
	0x0a, 0x17, 0x52, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x55, 0x52,
	0x4c, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x67, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x67, 0x69, 0x64, 0x22, 0x34, 0x0a, 0x18, 0x52,
	0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x55, 0x52, 0x4c, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x04, 0x75, 0x72, 0x6c, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x04, 0x2e, 0x55, 0x52, 0x4c, 0x52, 0x04, 0x75, 0x72, 0x6c,
	0x73, 0x22, 0x25, 0x0a, 0x11, 0x41, 0x72, 0x74, 0x69, 0x73, 0x74, 0x55, 0x52, 0x4c, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x67, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x67, 0x69, 0x64, 0x22, 0x2e, 0x0a, 0x12, 0x41, 0x72, 0x74, 0x69,
	0x73, 0x74, 0x55, 0x52, 0x4c, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18,
	0x0a, 0x04, 0x75, 0x72, 0x6c, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x04, 0x2e, 0x55,
	0x52, 0x4c, 0x52, 0x04, 0x75, 0x72, 0x6c, 0x73, 0x22, 0x3e, 0x0a, 0x06, 0x41, 0x72, 0x74, 0x69,
	0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x67, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x67, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x49, 0x0a, 0x0b, 0x52, 0x65, 0x6c, 0x65,
	0x61, 0x73, 0x65, 0x44, 0x61, 0x74, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x79, 0x65, 0x61, 0x72, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x79, 0x65, 0x61, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x6d,
	0x6f, 0x6e, 0x74, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x6d, 0x6f, 0x6e, 0x74,
	0x68, 0x12, 0x10, 0x0a, 0x03, 0x64, 0x61, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03,
	0x64, 0x61, 0x79, 0x22, 0x6e, 0x0a, 0x05, 0x41, 0x6c, 0x62, 0x75, 0x6d, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x10, 0x0a, 0x03,
	0x67, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x67, 0x69, 0x64, 0x12, 0x12,
	0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x2f, 0x0a, 0x0c, 0x72, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x5f, 0x64, 0x61,
	0x74, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x52, 0x65, 0x6c, 0x65, 0x61,
	0x73, 0x65, 0x44, 0x61, 0x74, 0x65, 0x52, 0x0b, 0x72, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x44,
	0x61, 0x74, 0x65, 0x22, 0xfc, 0x01, 0x0a, 0x05, 0x54, 0x72, 0x61, 0x63, 0x6b, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x10, 0x0a,
	0x03, 0x67, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x67, 0x69, 0x64, 0x12,
	0x21, 0x0a, 0x0c, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x69, 0x64, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x67,
	0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x6c, 0x65, 0x6e, 0x67, 0x74, 0x68,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x6c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x12, 0x1f,
	0x0a, 0x06, 0x61, 0x72, 0x74, 0x69, 0x73, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x07,
	0x2e, 0x41, 0x72, 0x74, 0x69, 0x73, 0x74, 0x52, 0x06, 0x61, 0x72, 0x74, 0x69, 0x73, 0x74, 0x12,
	0x1c, 0x0a, 0x05, 0x61, 0x6c, 0x62, 0x75, 0x6d, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x06,
	0x2e, 0x41, 0x6c, 0x62, 0x75, 0x6d, 0x52, 0x05, 0x61, 0x6c, 0x62, 0x75, 0x6d, 0x12, 0x1a, 0x0a,
	0x08, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x08, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x27, 0x0a, 0x0f, 0x6d, 0x65, 0x64,
	0x69, 0x75, 0x6d, 0x5f, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x0e, 0x6d, 0x65, 0x64, 0x69, 0x75, 0x6d, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69,
	0x6f, 0x6e, 0x22, 0x39, 0x0a, 0x03, 0x55, 0x52, 0x4c, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x67, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x67, 0x69, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x75,
	0x72, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x32, 0xbe, 0x03,
	0x0a, 0x07, 0x50, 0x69, 0x74, 0x63, 0x68, 0x65, 0x72, 0x12, 0x33, 0x0a, 0x0a, 0x4d, 0x61, 0x74,
	0x63, 0x68, 0x54, 0x72, 0x61, 0x63, 0x6b, 0x12, 0x10, 0x2e, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x69,
	0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x11, 0x2e, 0x4d, 0x61, 0x74, 0x63,
	0x68, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x2b,
	0x0a, 0x08, 0x47, 0x65, 0x74, 0x54, 0x72, 0x61, 0x63, 0x6b, 0x12, 0x0d, 0x2e, 0x54, 0x72, 0x61,
	0x63, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x0e, 0x2e, 0x54, 0x72, 0x61, 0x63,
	0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x2e, 0x0a, 0x09, 0x47,
	0x65, 0x74, 0x54, 0x72, 0x61, 0x63, 0x6b, 0x73, 0x12, 0x0e, 0x2e, 0x54, 0x72, 0x61, 0x63, 0x6b,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x0f, 0x2e, 0x54, 0x72, 0x61, 0x63, 0x6b,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x34, 0x0a, 0x0b, 0x47,
	0x65, 0x74, 0x43, 0x6f, 0x76, 0x65, 0x72, 0x41, 0x72, 0x74, 0x12, 0x10, 0x2e, 0x43, 0x6f, 0x76,
	0x65, 0x72, 0x41, 0x72, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x11, 0x2e, 0x43,
	0x6f, 0x76, 0x65, 0x72, 0x41, 0x72, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x12, 0x2e, 0x0a, 0x09, 0x47, 0x65, 0x74, 0x41, 0x72, 0x74, 0x69, 0x73, 0x74, 0x12, 0x0e,
	0x2e, 0x41, 0x72, 0x74, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x0f,
	0x2e, 0x41, 0x72, 0x74, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x12, 0x31, 0x0a, 0x0a, 0x47, 0x65, 0x74, 0x41, 0x72, 0x74, 0x69, 0x73, 0x74, 0x73, 0x12,
	0x0f, 0x2e, 0x41, 0x72, 0x74, 0x69, 0x73, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x10, 0x2e, 0x41, 0x72, 0x74, 0x69, 0x73, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x00, 0x12, 0x4c, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x52, 0x65, 0x6c, 0x65, 0x61,
	0x73, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x55, 0x52, 0x4c, 0x73, 0x12, 0x18, 0x2e, 0x52, 0x65,
	0x6c, 0x65, 0x61, 0x73, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x55, 0x52, 0x4c, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x19, 0x2e, 0x52, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x47,
	0x72, 0x6f, 0x75, 0x70, 0x55, 0x52, 0x4c, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x12, 0x3a, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x41, 0x72, 0x74, 0x69, 0x73, 0x74, 0x55,
	0x52, 0x4c, 0x73, 0x12, 0x12, 0x2e, 0x41, 0x72, 0x74, 0x69, 0x73, 0x74, 0x55, 0x52, 0x4c, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x13, 0x2e, 0x41, 0x72, 0x74, 0x69, 0x73, 0x74,
	0x55, 0x52, 0x4c, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x28,
	0x5a, 0x26, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x68, 0x75, 0x67,
	0x6f, 0x61, 0x74, 0x65, 0x61, 0x73, 0x65, 0x2f, 0x70, 0x69, 0x74, 0x63, 0x68, 0x65, 0x72, 0x2f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_protobuf_pitcher_proto_rawDescOnce sync.Once
	file_protobuf_pitcher_proto_rawDescData = file_protobuf_pitcher_proto_rawDesc
)

func file_protobuf_pitcher_proto_rawDescGZIP() []byte {
	file_protobuf_pitcher_proto_rawDescOnce.Do(func() {
		file_protobuf_pitcher_proto_rawDescData = protoimpl.X.CompressGZIP(file_protobuf_pitcher_proto_rawDescData)
	})
	return file_protobuf_pitcher_proto_rawDescData
}

var file_protobuf_pitcher_proto_msgTypes = make([]protoimpl.MessageInfo, 23)
var file_protobuf_pitcher_proto_goTypes = []interface{}{
	(*MatchingRequest)(nil),          // 0: MatchingRequest
	(*MatchingResponse)(nil),         // 1: MatchingResponse
	(*TrackRequest)(nil),             // 2: TrackRequest
	(*TrackResponse)(nil),            // 3: TrackResponse
	(*TracksRequest)(nil),            // 4: TracksRequest
	(*TracksResponse)(nil),           // 5: TracksResponse
	(*CoverArtRequest)(nil),          // 6: CoverArtRequest
	(*CoverArtResponse)(nil),         // 7: CoverArtResponse
	(*ArtistRequest)(nil),            // 8: ArtistRequest
	(*ArtistResponse)(nil),           // 9: ArtistResponse
	(*ArtistsRequest)(nil),           // 10: ArtistsRequest
	(*ArtistsResponse)(nil),          // 11: ArtistsResponse
	(*ReleaseGroupURLsRequest)(nil),  // 12: ReleaseGroupURLsRequest
	(*ReleaseGroupURLsResponse)(nil), // 13: ReleaseGroupURLsResponse
	(*ArtistURLsRequest)(nil),        // 14: ArtistURLsRequest
	(*ArtistURLsResponse)(nil),       // 15: ArtistURLsResponse
	(*Artist)(nil),                   // 16: Artist
	(*ReleaseDate)(nil),              // 17: ReleaseDate
	(*Album)(nil),                    // 18: Album
	(*Track)(nil),                    // 19: Track
	(*URL)(nil),                      // 20: URL
	nil,                              // 21: TracksResponse.TracksEntry
	nil,                              // 22: ArtistsResponse.ArtistsEntry
}
var file_protobuf_pitcher_proto_depIdxs = []int32{
	19, // 0: MatchingResponse.track:type_name -> Track
	19, // 1: TrackResponse.track:type_name -> Track
	21, // 2: TracksResponse.tracks:type_name -> TracksResponse.TracksEntry
	16, // 3: ArtistResponse.artist:type_name -> Artist
	22, // 4: ArtistsResponse.artists:type_name -> ArtistsResponse.ArtistsEntry
	20, // 5: ReleaseGroupURLsResponse.urls:type_name -> URL
	20, // 6: ArtistURLsResponse.urls:type_name -> URL
	17, // 7: Album.release_date:type_name -> ReleaseDate
	16, // 8: Track.artist:type_name -> Artist
	18, // 9: Track.album:type_name -> Album
	19, // 10: TracksResponse.TracksEntry.value:type_name -> Track
	16, // 11: ArtistsResponse.ArtistsEntry.value:type_name -> Artist
	0,  // 12: Pitcher.MatchTrack:input_type -> MatchingRequest
	2,  // 13: Pitcher.GetTrack:input_type -> TrackRequest
	4,  // 14: Pitcher.GetTracks:input_type -> TracksRequest
	6,  // 15: Pitcher.GetCoverArt:input_type -> CoverArtRequest
	8,  // 16: Pitcher.GetArtist:input_type -> ArtistRequest
	10, // 17: Pitcher.GetArtists:input_type -> ArtistsRequest
	12, // 18: Pitcher.GetReleaseGroupURLs:input_type -> ReleaseGroupURLsRequest
	14, // 19: Pitcher.GetArtistURLs:input_type -> ArtistURLsRequest
	1,  // 20: Pitcher.MatchTrack:output_type -> MatchingResponse
	3,  // 21: Pitcher.GetTrack:output_type -> TrackResponse
	5,  // 22: Pitcher.GetTracks:output_type -> TracksResponse
	7,  // 23: Pitcher.GetCoverArt:output_type -> CoverArtResponse
	9,  // 24: Pitcher.GetArtist:output_type -> ArtistResponse
	11, // 25: Pitcher.GetArtists:output_type -> ArtistsResponse
	13, // 26: Pitcher.GetReleaseGroupURLs:output_type -> ReleaseGroupURLsResponse
	15, // 27: Pitcher.GetArtistURLs:output_type -> ArtistURLsResponse
	20, // [20:28] is the sub-list for method output_type
	12, // [12:20] is the sub-list for method input_type
	12, // [12:12] is the sub-list for extension type_name
	12, // [12:12] is the sub-list for extension extendee
	0,  // [0:12] is the sub-list for field type_name
}

func init() { file_protobuf_pitcher_proto_init() }
func file_protobuf_pitcher_proto_init() {
	if File_protobuf_pitcher_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_protobuf_pitcher_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MatchingRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protobuf_pitcher_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MatchingResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protobuf_pitcher_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TrackRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protobuf_pitcher_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TrackResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protobuf_pitcher_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TracksRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protobuf_pitcher_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TracksResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protobuf_pitcher_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CoverArtRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protobuf_pitcher_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CoverArtResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protobuf_pitcher_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ArtistRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protobuf_pitcher_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ArtistResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protobuf_pitcher_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ArtistsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protobuf_pitcher_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ArtistsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protobuf_pitcher_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReleaseGroupURLsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protobuf_pitcher_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReleaseGroupURLsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protobuf_pitcher_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ArtistURLsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protobuf_pitcher_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ArtistURLsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protobuf_pitcher_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Artist); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protobuf_pitcher_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReleaseDate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protobuf_pitcher_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Album); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protobuf_pitcher_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Track); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protobuf_pitcher_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*URL); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_protobuf_pitcher_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   23,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_protobuf_pitcher_proto_goTypes,
		DependencyIndexes: file_protobuf_pitcher_proto_depIdxs,
		MessageInfos:      file_protobuf_pitcher_proto_msgTypes,
	}.Build()
	File_protobuf_pitcher_proto = out.File
	file_protobuf_pitcher_proto_rawDesc = nil
	file_protobuf_pitcher_proto_goTypes = nil
	file_protobuf_pitcher_proto_depIdxs = nil
}
